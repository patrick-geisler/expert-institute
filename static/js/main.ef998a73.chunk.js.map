{"version":3,"sources":["store/cocktails.js","Components/DrinkDetail.js","Components/DrinksByCategory.js","Components/FilteredList.js","Components/Home.js","App.js","theme.js","Entry.js","serviceWorker.js","index.js","store/configureStore.js"],"names":["initialState","cocktails","isDataFetching","filteredList","drinkList","drinkDetails","filteredLists","getRandomCocktails","dispatch","type","bool","fetch","then","response","json","error","console","log","receiveRandomCocktail","getFilteredList","listType","fetchUrl","receiveFilteredList","getDrinksByFilter","filterParam","receiveDrinkList","getDrinkDetails","drinkId","receiveDrinkDetails","rootReducer","state","action","Object","assign","connect","bindActionCreators","dispatchGetDrinkDetails","match","params","useEffect","drinkInfo","drinks","className","src","strDrinkThumb","height","width","alt","strDrink","strCategory","strInstructions","strIngredient1","strMeasure1","strIngredient2","strMeasure2","strIngredient3","strMeasure3","strIngredient4","strMeasure4","strIngredient5","strMeasure5","strIngredient6","strMeasure6","strIngredient7","strMeasure7","strIngredient10","strMeasure10","dispatchGetdrinksByFilter","drinksList","filteredDrinkList","map","drink","index","to","url","idDrink","key","ButtonBase","color","variant","dispatchGetFilteredList","displayList","displayElement","filterElement","strGlass","Button","exact","path","render","props","Home","dispatchGetRandomCocktail","RandDrink","component","theme","createMuiTheme","palette","primary","main","secondary","background","default","Entry","store","ThemeProvider","App","Boolean","window","location","hostname","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"0UAAaA,EAAe,CAC1BC,UAAW,GACXC,gBAAgB,EAChBC,aAAc,GACdC,UAAW,GACXC,aAAc,IAGHC,EACC,aADDA,EAEJ,QA8CHC,EAAqB,WACzB,OAAO,SAACC,GAEN,OADAA,EATK,CACLC,KAAK,mBACLC,MAAM,IAQCC,MAAM,0DACVC,MACC,SAAAC,GAAQ,OAAIA,EAASC,UACrB,SAAAC,GAAK,OAAIC,QAAQC,IAAI,+BAAgCF,MAEtDH,MAAK,SAAAE,GAAI,OACRN,EA7C6B,SAACM,GACpC,MAAO,CACLL,KAAM,0BACNR,UAAWa,GA0CEI,CAAsBJ,OAEhCF,MAAK,WACJJ,EAnBC,CACLC,KAAK,mBACLC,MAAM,SAsBJS,EAAkB,SAACC,GACvB,IAAIC,EAQJ,OAPGD,IAAad,EACde,EAAW,8DACFD,IAAad,EACtBe,EAAW,8DAEXL,QAAQC,IAAI,UAEP,SAACT,GAEN,OADAA,EAlCK,CACLC,KAAK,mBACLC,MAAM,IAiCCC,MAAMU,GACZT,MACC,SAAAC,GAAQ,OAAIA,EAASC,UACrB,SAAAC,GAAK,OAAIC,QAAQC,IAAI,kCAAmCF,MAEzDH,MAAK,SAAAE,GACFN,EA/DoB,SAACM,GAC3B,MAAO,CACLL,KAAM,wBACNN,aAAcW,GA4DDQ,CAAoBR,OAEhCF,MAAK,WACJJ,EA5CG,CACLC,KAAK,mBACLC,MAAM,SA+CJa,EAAoB,SAACH,EAAUI,GACnC,IAAIH,EAQJ,OAPGD,IAAad,EACde,EAAQ,mEAA+DG,GAC9DJ,IAAad,EACtBe,EAAQ,mEAA+DG,GAEvER,QAAQC,IAAI,UAEP,SAACT,GAEN,OADAA,EA3DK,CACLC,KAAK,mBACLC,MAAM,IA0DCC,MAAMU,GACZT,MACC,SAAAC,GAAQ,OAAIA,EAASC,UACrB,SAAAC,GAAK,OAAIC,QAAQC,IAAI,kCAAmCF,MAEzDH,MAAK,SAAAE,GACFN,EAjFiB,SAACM,GACxB,MAAO,CACLL,KAAM,qBACNL,UAAWU,GA8EEW,CAAiBX,OAE7BF,MAAK,WACJJ,EArEG,CACLC,KAAK,mBACLC,MAAM,SAwEJgB,EAAkB,SAACC,GAEvB,OADAX,QAAQC,IAAIU,GACL,SAACnB,GAEN,OADAA,EA7EK,CACLC,KAAK,mBACLC,MAAM,IA4ECC,MAAM,4DAAD,OAA6DgB,IACtEf,MACC,SAAAC,GAAQ,OAAIA,EAASC,UACrB,SAAAC,GAAK,OAAIC,QAAQC,IAAI,+BAAgCF,MAEtDH,MAAK,SAAAE,GAAI,OACRN,EA5FoB,SAACM,GAC3B,MAAO,CACLL,KAAM,wBACNJ,aAAcS,GAyFDc,CAAoBd,OAE9BF,MAAK,WACJJ,EAvFC,CACLC,KAAK,mBACLC,MAAM,SA8HKmB,EA3BK,WAAmC,IAAlCC,EAAiC,uDAAzB9B,EAAc+B,EAAW,uCACpD,OAAQA,EAAOtB,MACb,IAAI,0BACF,OAAOuB,OAAOC,OAAO,GAAIH,EAAO,CAC9B7B,UAAW8B,EAAO9B,YAEtB,IAAI,wBACF,OAAO+B,OAAOC,OAAO,GAAIH,EAAO,CAC9B3B,aAAc4B,EAAO5B,eAEzB,IAAI,qBACF,OAAO6B,OAAOC,OAAO,GAAIH,EAAO,CAC9B1B,UAAW2B,EAAO3B,YAEtB,IAAI,wBACF,OAAO4B,OAAOC,OAAO,GAAIH,EAAO,CAC9BzB,aAAc0B,EAAO1B,eAEzB,IAAI,mBACF,OAAO2B,OAAOC,OAAO,GAAIH,EAAO,CAC9B5B,eAAgB6B,EAAOrB,OAE3B,QACE,OAAOoB,I,gBCjIEI,G,MAAAA,aARS,SAAAJ,GAAK,MAAK,CAChCzB,aAAcyB,EAAMzB,iBAGK,SAAAG,GAAQ,OAAI2B,YAAmB,CACxDC,wBAAyBV,GACxBlB,KAEY0B,EApCK,SAAC,GAAoD,IAAnDE,EAAkD,EAAlDA,wBAAyB/B,EAAyB,EAAzBA,aAAcgC,EAAW,EAAXA,MACrDV,EAAUU,GAASA,EAAMC,OAAOX,QAEtCY,qBAAU,WACRH,EAAwBT,KACvB,CAACS,EAAyBT,IAE7B,IAAMa,EAAYnC,EAAaoC,OAASpC,EAAaoC,OAAO,GAAK,CAAC,WAElE,OACA,yBAAKC,UAAU,qBACb,yBAAKC,IAAG,UAAKH,EAAUI,cAAf,YAAwCC,OAAO,MAAMC,MAAM,MAAMC,IAAKP,EAAUQ,WACxF,8BAAOR,EAAUQ,UACjB,8BAAOR,EAAUS,aACjB,8BAAOT,EAAUU,iBACjB,gDACA,8BAAOV,EAAUW,eAAjB,MAAoCX,EAAUY,aAC9C,8BAAOZ,EAAUa,eAAjB,MAAoCb,EAAUc,aAC9C,8BAAOd,EAAUe,eAAjB,MAAoCf,EAAUgB,aAC9C,8BAAOhB,EAAUiB,eAAjB,MAAoCjB,EAAUkB,aAC9C,8BAAOlB,EAAUmB,eAAjB,MAAoCnB,EAAUoB,aAC9C,8BAAOpB,EAAUqB,eAAjB,MAAoCrB,EAAUsB,aAC9C,8BAAOtB,EAAUuB,eAAjB,MAAoCvB,EAAUwB,aAC9C,8BAAOxB,EAAUyB,gBAAjB,MAAqCzB,EAAU0B,mB,gBCepChC,eARS,SAAAJ,GAAK,MAAK,CAChC1B,UAAW0B,EAAM1B,cAGQ,SAAAI,GAAQ,OAAI2B,YAAmB,CACxDgC,0BAA2B5C,GAC1Bf,KAEY0B,EArCU,SAAC,GAA+D,IAA7Dd,EAA4D,EAA5DA,SAAU+C,EAAkD,EAAlDA,0BAA2B/D,EAAuB,EAAvBA,UAAWiC,EAAY,EAAZA,MACpEb,EAAca,EAAMC,OAAO8B,WAEjC7B,qBAAU,WACR4B,EAA0B/C,EAAUI,KACnC,CAAC2C,EAA2B3C,EAAaJ,IAE5C,IAAMiD,EAAoBjE,EAAUqC,OAASrC,EAAUqC,OAAS,CAAC,WACjE,OACE,kBAAC,IAAD,KACA,yBAAKC,UAAU,uBACZ2B,EAAkB,IAAMA,EAAkBC,KAAI,SAACC,EAAOC,GACrD,OAEE,kBAAC,IAAD,CAAMC,GAAE,UAAKpC,EAAMqC,IAAX,YAAkBH,EAAMI,SAAWC,IAAKJ,GAC9C,yBAAK9B,UAAU,aACb,kBAACmC,EAAA,EAAD,CAAYC,MAAM,UAAUC,QAAQ,YAAYrC,UAAW,kBACzD,yBAAKC,IAAG,UAAK4B,EAAM3B,cAAX,YAAoCE,MAAM,MAAMD,OAAO,MAAME,IAAKwB,EAAMvB,WAChF,yBAAKN,UAAW,eAAe,gCAAS6B,EAAMvB,sB,QCoC/Cd,eARS,SAAAJ,GAAK,MAAK,CAChC3B,aAAc2B,EAAM3B,iBAGK,SAAAK,GAAQ,OAAI2B,YAAmB,CACxD6C,wBAAyB7D,GACxBX,KAEY0B,EA9CM,SAAC,GAA8D,IAA7Dd,EAA4D,EAA5DA,SAAUjB,EAAkD,EAAlDA,aAAc6E,EAAoC,EAApCA,wBAAyB3C,EAAW,EAAXA,MACtEE,qBAAU,WACRyC,EAAwB5D,KACvB,CAAC4D,EAAyB5D,IAE7B,IAAM6D,EAAc9E,EAAasC,OAAStC,EAAasC,OAAS,CAAC,WACjE,OACE,yBAAKC,UAAU,2BACb,yBAAKA,UAAU,sBACduC,EAAY,IAAMA,EAAYX,KAAI,SAACY,EAAgBV,GAElD,IAAMW,EAAgBD,EAAe/B,gBAAkB+B,EAAeE,SACtE,OACE,yBAAK1C,UAAW,cAAekC,IAAKJ,GAClC,kBAAC,IAAD,CAAMC,GAAE,UAAKpC,EAAMqC,IAAX,YAAkBS,GAAiBzC,UAAW,eACpD,kBAAC2C,EAAA,EAAD,CAAQP,MAAM,UAAUC,QAAQ,YAAYrC,UAAW,kBACpDyC,SAOX,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEG,OAAK,EACLC,KAAI,UAAKlD,EAAMkD,KAAX,gBACJC,OAAQ,SAACC,GAAD,OAAW,kBAAC,EAAD,eAAkBrE,SAAUA,GAAcqE,OAE/D,kBAAC,IAAD,CACEF,KAAI,UAAKlD,EAAMkD,KAAX,yBACJC,OAAQ,SAACC,GAAD,OAAW,kBAAC,EAAgBA,WCzB/BC,G,MAfF,WACX,OACE,kBAAC,IAAD,KACE,yBAAKhD,UAAU,kBACf,kBAAC2C,EAAA,EAAD,CAAQP,MAAM,UAAUpC,UAAW,eACjC,kBAAC,IAAD,CAAM+B,GAAG,sBAAT,2BAED,kBAACY,EAAA,EAAD,CAAQP,MAAM,UAAUpC,UAAW,eAClC,kBAAC,IAAD,CAAM+B,GAAG,iBAAT,0BCiCOvC,eARS,SAAAJ,GAAK,MAAK,CAChC7B,UAAW6B,EAAM7B,cAGQ,SAAAO,GAAQ,OAAI2B,YAAmB,CACxDwD,0BAA2BpF,GAC1BC,KAEY0B,EArCC,SAAC,GAA4C,IAA3CjC,EAA0C,EAA1CA,UAAW0F,EAA+B,EAA/BA,0BAE3BpD,qBAAU,WACRoD,MACC,CAACA,IAEJ,IAAMC,EAAY3F,EAAUwC,OAASxC,EAAUwC,OAAO,GAAGO,SAAW,UAGpE,OAFAhC,QAAQC,IAAI2E,GAIV,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAON,OAAK,EAACC,KAAK,IAAIM,UAAWH,IACjC,kBAAC,IAAD,CACEH,KAAK,sBACLC,OAAQ,SAACC,GAAD,OAAW,kBAAC,EAAD,eAAcrE,SAAUd,GAA8BmF,OAE3E,kBAAC,IAAD,CACEF,KAAK,iBACLC,OAAQ,SAACC,GAAD,OAAW,kBAAC,EAAD,eAAcrE,SAAUd,GAAyBmF,OAGtE,kBAAC,IAAD,CACED,OAAQ,SAACC,GAAD,OAAW,2C,gBCbZK,EAjBDC,YAAe,CAC3BC,QAAS,CACPC,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAM,WAERnF,MAAO,CACLmF,KAAM,WAERE,WAAY,CACVC,QAAS,WCGAC,EAZD,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACf,OACE,kBAAC,IAAD,CAAUA,MAAOA,GACf,kBAACC,EAAA,EAAD,CAAeV,MAAOA,GACpB,kBAAC,IAAD,KACE,kBAACW,EAAD,U,QCDUC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASxE,MACvB,2DCXN,IAAMkE,ECAGO,YACLjF,EACAkF,YAAgBC,MDApBC,IAASzB,OAAO,kBAAC,EAAD,CAAOe,MAAOA,IAAWW,SAASC,eAAe,SD0H3D,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB1G,MAAK,SAAA2G,GACJA,EAAaC,gBAEdC,OAAM,SAAA1G,GACLC,QAAQD,MAAMA,EAAM2G,c","file":"static/js/main.ef998a73.chunk.js","sourcesContent":["export const initialState = {\n  cocktails: [],\n  isDataFetching: false,\n  filteredList: [],\n  drinkList: [],\n  drinkDetails: []\n}\n\nexport const filteredLists = {\n  INGREDIENT: 'ingredient',\n  GLASS: 'glass',\n  CATEGORY: 'category',\n  ALCOHOLIC: 'alcoholic'\n}\n\n// TODO: MAKE NEW STATE FOR EACH TYPE OF FILTERED LIST\n// TODO: BREAK APART INTO SEPRATE FILES FOR EACH ROUTE\n// TODO: NORMALIZE DATA IN REDUCER???\n// TODO: FIX ERROR HANDLING\n\nexport const receiveRandomCocktail = (json) => {\n  return {\n    type: 'RECEIVE_RANDOM_COCKTAIL',\n    cocktails: json\n  }\n}\n\nconst receiveFilteredList = (json) => {\n  return {\n    type: 'RECEIVE_FILTERED_LIST',\n    filteredList: json\n  }\n}\n\nconst receiveDrinkList = (json) => {\n  return {\n    type: 'RECEIVE_DRINK_LIST',\n    drinkList: json\n  }\n}\n\nconst receiveDrinkDetails = (json) => {\n  return {\n    type: 'RECEIVE_DRINK_DETAILS',\n    drinkDetails: json\n  }\n}\n\nconst isDataFetching = (bool) => {\n  return {\n    type: `IS_DATA_FETCHING`,\n    bool: true\n  }\n}\n\n\nconst getRandomCocktails = () => {\n  return (dispatch) => {\n    dispatch(isDataFetching(true))\n    return fetch(`https://www.thecocktaildb.com/api/json/v1/1/random.php`)\n      .then(\n        response => response.json(),\n        error => console.log('Failed to fetch Random Drink', error)\n      )\n      .then(json =>\n        dispatch(receiveRandomCocktail(json))\n      )\n      .then(() => {\n        dispatch(isDataFetching(false))\n      })\n  }\n}\n\nconst getFilteredList = (listType) => {\n  let fetchUrl\n  if(listType === filteredLists.INGREDIENT){\n    fetchUrl = 'https://www.thecocktaildb.com/api/json/v1/1/list.php?i=list'\n  } else if (listType === filteredLists.GLASS){\n    fetchUrl = 'https://www.thecocktaildb.com/api/json/v1/1/list.php?g=list'\n  } else {\n    console.log('OOOOPS')\n  }\n  return (dispatch) => {\n    dispatch(isDataFetching(true))\n    return fetch(fetchUrl)\n    .then(\n      response => response.json(),\n      error => console.log('Failed to fetch ingredient List', error)\n    )\n    .then(json => {\n        dispatch(receiveFilteredList(json))\n    })\n    .then(() => {\n      dispatch(isDataFetching(false))\n    })\n  }\n}\n\nconst getDrinksByFilter = (listType, filterParam) => {\n  let fetchUrl\n  if(listType === filteredLists.INGREDIENT){\n    fetchUrl = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${filterParam}`\n  } else if (listType === filteredLists.GLASS){\n    fetchUrl = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?g=${filterParam}`\n  } else {\n    console.log('OOOOPS')\n  }\n  return (dispatch) => {\n    dispatch(isDataFetching(true))\n    return fetch(fetchUrl)\n    .then(\n      response => response.json(),\n      error => console.log('Failed to fetch ingredient List', error)\n    )\n    .then(json => {\n        dispatch(receiveDrinkList(json))\n    })\n    .then(() => {\n      dispatch(isDataFetching(false))\n    })\n  }\n}\n\nconst getDrinkDetails = (drinkId) => {\n  console.log(drinkId)\n  return (dispatch) => {\n    dispatch(isDataFetching(true))\n    return fetch(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${drinkId}`)\n      .then(\n        response => response.json(),\n        error => console.log('Failed to fetch Random Drink', error)\n      )\n      .then(json =>\n        dispatch(receiveDrinkDetails(json))\n      )\n      .then(() => {\n        dispatch(isDataFetching(false))\n      })\n  }\n}\n\nexport {\n  getRandomCocktails,\n  isDataFetching,\n  getFilteredList,\n  getDrinksByFilter,\n  getDrinkDetails\n}\n\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case `RECEIVE_RANDOM_COCKTAIL`:\n      return Object.assign({}, state, {\n        cocktails: action.cocktails\n      })\n    case `RECEIVE_FILTERED_LIST`:\n      return Object.assign({}, state, {\n        filteredList: action.filteredList\n      })\n    case `RECEIVE_DRINK_LIST`:\n      return Object.assign({}, state, {\n        drinkList: action.drinkList\n      })\n    case `RECEIVE_DRINK_DETAILS`:\n      return Object.assign({}, state, {\n        drinkDetails: action.drinkDetails\n      })\n    case `IS_DATA_FETCHING`:\n      return Object.assign({}, state, {\n        isDataFetching: action.bool\n      })\n    default:\n      return state\n  }\n}\n\nexport default rootReducer\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nimport '../Styles/DrinkDetailsCard.css'\n\nimport { getDrinkDetails } from '../store/cocktails'\n\nconst DrinkDetail = ({dispatchGetDrinkDetails, drinkDetails, match}) => {\n  const drinkId = match && match.params.drinkId\n\n  useEffect(() => {\n    dispatchGetDrinkDetails(drinkId)\n  }, [dispatchGetDrinkDetails, drinkId])\n\n  const drinkInfo = drinkDetails.drinks ? drinkDetails.drinks[0] : ['Loading']\n  // TODO: CREATE ING OBJ\n  return(\n  <div className='drink-detail-card'>\n    <img src={`${drinkInfo.strDrinkThumb}/preview`} height='200' width='200' alt={drinkInfo.strDrink} />\n    <span>{drinkInfo.strDrink}</span>\n    <span>{drinkInfo.strCategory}</span>\n    <span>{drinkInfo.strInstructions}</span>\n    <span> Ingredients: </span>\n    <span>{drinkInfo.strIngredient1} - {drinkInfo.strMeasure1}</span>\n    <span>{drinkInfo.strIngredient2} - {drinkInfo.strMeasure2}</span>\n    <span>{drinkInfo.strIngredient3} - {drinkInfo.strMeasure3}</span>\n    <span>{drinkInfo.strIngredient4} - {drinkInfo.strMeasure4}</span>\n    <span>{drinkInfo.strIngredient5} - {drinkInfo.strMeasure5}</span>\n    <span>{drinkInfo.strIngredient6} - {drinkInfo.strMeasure6}</span>\n    <span>{drinkInfo.strIngredient7} - {drinkInfo.strMeasure7}</span>\n    <span>{drinkInfo.strIngredient10} - {drinkInfo.strMeasure10}</span>\n  </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  drinkDetails: state.drinkDetails\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  dispatchGetDrinkDetails: getDrinkDetails\n}, dispatch)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DrinkDetail)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { getDrinksByFilter} from '../store/cocktails'\nimport { Link, Route } from 'react-router-dom'\n\nimport { ButtonBase }  from '@material-ui/core'\n\n\nconst DrinksByCategory = ({ listType, dispatchGetdrinksByFilter, drinkList, match }) => {\n  const filterParam = match.params.drinksList\n\n  useEffect(() => {\n    dispatchGetdrinksByFilter(listType, filterParam)\n  }, [dispatchGetdrinksByFilter, filterParam, listType])\n\n  const filteredDrinkList = drinkList.drinks ? drinkList.drinks : ['Loading']\n  return (\n    <Route>\n    <div className='filtered-list-cards'>\n      {filteredDrinkList[0] && filteredDrinkList.map((drink, index) => {\n        return(\n          //Fix Alt\n          <Link to={`${match.url}/${drink.idDrink}`} key={index}>\n            <div className='drinkCard' >\n              <ButtonBase color='primary' variant='contained' className={'sidebar-button'}>\n                <img src={`${drink.strDrinkThumb}/preview`} width='200' height='200' alt={drink.strDrink}/>\n                <div className={'drink-title'}><strong>{drink.strDrink}</strong></div>\n              </ButtonBase>\n            </div>\n          </Link>\n        )\n      })}\n    </div>\n    </Route>\n  )\n}\n\nconst mapStateToProps = state => ({\n  drinkList: state.drinkList\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  dispatchGetdrinksByFilter: getDrinksByFilter\n}, dispatch)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DrinksByCategory)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { getFilteredList } from '../store/cocktails'\nimport {\n  Route,\n  Link,\n  Switch\n} from \"react-router-dom\";\nimport DrinkDetail from './DrinkDetail'\nimport '../Styles/FilteredList.css';\n\nimport DrinksByCategory from './DrinksByCategory'\n\nimport { Button}  from '@material-ui/core'\n\n\nconst FilteredList = ({listType, filteredList, dispatchGetFilteredList, match}) => {\n  useEffect(() => {\n    dispatchGetFilteredList(listType)\n  }, [dispatchGetFilteredList, listType])\n\n  const displayList = filteredList.drinks ? filteredList.drinks : ['Loading']\n  return(\n    <div className='filtered-list-container'>\n      <div className='side-bar-container'>\n      {displayList[0] && displayList.map((displayElement, index) => {\n        //FIX\n        const filterElement = displayElement.strIngredient1 || displayElement.strGlass\n        return(\n          <div className={'list-filter'} key={index}>\n            <Link to={`${match.url}/${filterElement}`} className={'router-link'}>\n              <Button color='primary' variant='contained' className={'sidebar-button'}>\n                {filterElement}\n              </Button>\n            </Link>\n          </div>\n        )\n      })}\n      </div>\n      <Switch>\n        <Route \n          exact\n          path={`${match.path}/:drinksList`} \n          render={(props) => <DrinksByCategory listType={listType} {...props} />}\n        />\n        <Route \n          path={`${match.path}/:drinksList/:drinkId`} \n          render={(props) => <DrinkDetail {...props}/>}\n        />\n      </Switch>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  filteredList: state.filteredList\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  dispatchGetFilteredList: getFilteredList\n}, dispatch)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FilteredList)","import React from 'react'\nimport {\n  Route,\n  Link\n} from \"react-router-dom\";\nimport '../Styles/Home.css'\nimport { Button}  from '@material-ui/core'\n\nconst Home = () => {\n  return(\n    <Route >\n      <div className='home-container'>\n      <Button color='primary' className={'home-button'}>\n        <Link to='filteredIngredient'> Filter By Ingredient </Link>\n       </Button> \n       <Button color='primary' className={'home-button'}>\n        <Link to='filteredGlass'> Filter By Glass </Link>\n        </Button>\n      </div>\n    </Route>\n  )\n}\n\nexport default Home","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport FilteredList from './Components/FilteredList'\nimport Home from './Components/Home'\nimport {\n  Route,\n  Switch\n} from \"react-router-dom\"\n\nimport { bindActionCreators } from 'redux'\nimport { getRandomCocktails, filteredLists } from './store/cocktails'\n\nconst Wrapper = ({cocktails, dispatchGetRandomCocktail}) => {\n\n  useEffect(() => {\n    dispatchGetRandomCocktail()\n  }, [dispatchGetRandomCocktail])\n\n  const RandDrink = cocktails.drinks ? cocktails.drinks[0].strDrink : 'Loading'\n  console.log(RandDrink)\n\n  return(\n    //add Animations\n    <Switch>\n      <Route exact path='/' component={Home} />\n      <Route \n        path='/filteredIngredient' \n        render={(props) => <FilteredList listType={filteredLists.INGREDIENT} {...props} />}\n      />\n      <Route \n        path='/filteredGlass' \n        render={(props) => <FilteredList listType={filteredLists.GLASS} {...props} />}\n      />\n      {/* Add 404 */}\n      <Route\n        render={(props) => <div>404</div>} \n      />\n    </Switch>\n  )\n}\n\nconst mapStateToProps = state => ({\n  cocktails: state.cocktails\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  dispatchGetRandomCocktail: getRandomCocktails,\n}, dispatch)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wrapper)","import { createMuiTheme } from '@material-ui/core/styles';\n\n// TODO USE OR DELETE\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#1e305e',\n    },\n    secondary: {\n      main: '#7fd6a9',\n    },\n    error: {\n      main: '#1e305e',\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n});\n\nexport default theme;","import React from 'react';\nimport { Provider} from 'react-redux'\nimport App from './App'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from './theme';\n\n\nconst Entry = ({ store }) => {\n  return (\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <Router>\n          <App/>\n        </Router>\n      </ThemeProvider> \n    </Provider>\n  );\n}\n\nexport default Entry;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Entry from './Entry';\nimport configureStore from './store/configureStore'\nimport * as serviceWorker from './serviceWorker';\n\nconst store = configureStore()\n\nReactDOM.render(<Entry store={store} />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport rootReducer from '../store/cocktails'\n\n\nexport default function configureStore() {\n  //Configure Redux Dev Tools\n  return createStore(\n    rootReducer,\n    applyMiddleware(thunkMiddleware)\n  )\n}"],"sourceRoot":""}